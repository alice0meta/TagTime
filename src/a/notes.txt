could clone install.py by writing a script that copies .tagtime_rc.template to $HOME/.tagtime_rc and sets
	.user = argv[1]
	.auth.beeminder = argv[2]

notes from settings.pl
	rc.user
	rc.auth.beeminder
	rc.beeminder[user_slug]
	rc.retro_threshold
	rc.catchup
	
	$usr = "__USER__";   # CHANGEME to your username
	$path = "__PATH__";  # CHANGEME to your path to tagtime
	        if($path !~ /\/$/) { $path.="/"; }
	# Get your personal Beeminder auth token (after signing in) from https://www.beeminder.com/api/v1/auth_token.json
	$beemauth = "abc123";  # CHANGEME to your personal beeminder auth token
	# CHANGEME by adding entries for each beeminder graph you want to auto-update:
	%beeminder = (
	  #"alice/work" => "job",  # all "job" pings get added to bmndr.com/alice/work
	  #"bob/play" => ["fun","whee"], # pings w/ "fun" and/or "whee" sent to bob/play

	  # ADVANCED USAGE: regular expressions
	  # pings tagged like "eat1", "eat2", "eat3" get added to carol/food:
	  #"carol/food" => qr/\beat\d+\b/,

	  # ADVANCED USAGE: plug-in functions
	  # pings tagged anything except "afk" get added to "dan/nafk":
	  #"dan/nafk" => sub { return shift() !~ /\bafk\b/; }
	  # pings tagged "workout" get added to dave/tueworkouts, but only on tuesdays:
	  #"dave/tueworkouts" => sub { my @now = localtime();
	  # return shift() =~/\bworkout\b/ && $now[6] == 2;
	  #}
	);
	# Pings from more than this many seconds ago get autologged with tags "afk" and "RETRO". (Pings can be overdue either because the computer was off or tagtime was waiting for you to answer a previous ping. If the computer was off, the tag "off" is also added.)
	$retrothresh = 60;
	$catchup = 0;  # Whether it beeps for old pings, ie, should it beep a bunch of times in a row when the computer wakes from sleep.

	$logf = "$path$usr.log";  # log file for pings
	# If you're using windows, you'll need cygwin and to set this flag to 1:
	$cygwin = __CYGWIN__;  # CHANGEME to 1 if you're using windows/cygwin.
	$ED = "__ED__ +";  # CHANGEME if you don't like vi (eg: /usr/bin/pico)
	$XT = "__XT__";    # CHANGEME to your path to xterm
	$gap = 45*60; # Average number of seconds between pings (eg, 60*60 = 1 hour).
	$seed = 666; # For pings not in sync with others, change this (NB: > 0).
	$linelen = 79; # Try to keep log lines at most this long.
	$enforcenums = 0;  # Whether it forces you to include a number in your ping response (include tag non or nonXX where XX is day of month to override). This is for task editor integration.
	        if($path !~ /\/$/) { $path.="/"; }